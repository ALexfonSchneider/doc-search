version: "3.8"
services:
  elastic:
      image: elasticsearch:8.10.2
      container_name: elastic
      environment:
        discovery.type: single-node
        xpack.security.enabled: false
      ports:
        - 9200:9200
      volumes:
        - ./volumes/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        - ./volumes/elastic/hunspell:/usr/share/elasticsearch/config/hunspell
      networks:
        Databases:
          aliases:
            - elastic
  
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    networks:
        Databases:
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
    networks:
        Databases:

  redis:
    container_name: redis
    image: redis/redis-stack-server:7.2.0-v6
    ports:
      - "6379:6379"

    
  # frontend:
  #   build:
  #     context: frontend/app
  #     dockerfile: Dockerfile
  #   networks:
  #     Frontend:
  #       aliases:
  #         - doc-search
  # backend:
  #   build: 
  #     context: backend/app
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8001:8001
  #   networks:
  #     Backend:
  #       aliases:
  #         - doc-search-api
  #     Databases:
  # nginx:
  #   build: 
  #     context: nginx
  #     dockerfile: Dockerfile
  #   volumes:
  #       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "8000:80"
  #   networks:
  #     Frontend:
  #     Backend:

networks:
  # Frontend:
  Databases:
  # Backend:
    
  