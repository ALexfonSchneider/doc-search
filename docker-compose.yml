version: "3.8"
services:
  elastic:
    container_name: elastic
    image: elasticsearch:8.10.2
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ports:
      - 9200:9200
    volumes:
      - ./volumes/elastic/data:/usr/share/elasticsearch/data
      - ./volumes/elastic/hunspell:/usr/share/elasticsearch/config/hunspell
    networks:
      Databases:
        aliases:
          - elastic
  
  mongo:
    image: mongo
    restart: always
    env_file:
      - secrets\mongo\mongo.env
    volumes:
      - "./volumes/mongo/db:/data/db"
    ports:
      - 27017:27017
    networks:
        Databases:
          aliases:
            - mongo

  redis:
    container_name: doc-search-cache
    image: redis/redis-stack:7.2.0-v6
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
      - "8001:8001"

  docprovider:
    build:
      context: get_doc_service/app
      dockerfile: Dockerfile
    
  frontend:
    build:
      context: frontend/app
      dockerfile: Dockerfile
    networks:
      Backend:

  backend:
    build: 
      context: ./backend/app-golang
      dockerfile: Dockerfile
    ports:
      - 8085:8085
    networks:
      Backend:
        aliases:
          - backend
      Databases:

  # nginx:
  #   build: 
  #     context: nginx
  #     dockerfile: Dockerfile
  #   volumes:
  #       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "8000:80"
  #   networks:
  #     Frontend:
  #     Backend:

networks:
  # Frontend:
  Databases:
  # Backend: